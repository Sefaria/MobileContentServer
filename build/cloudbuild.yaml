# Provision Static IP if it doesn't exist
# Provision Persistent Disk if it doesn't exist
# Generate Helm values
# Deploy
# Send message
---
substitutions:
  _ENV_NAME: prod
  _GKE_REGION: us-east1-b
  _GKE_CLUSTER: cluster-1
  _SUBDOMAIN: readonly-test
  _GKE_NAMESPACE: default
  _SHARED_TOKEN: deadbeef
  _K8S_ADMIN_BRANCH: master
  _SEFARIA_PROJECT_BRANCH: master

steps:
  - name: gcr.io/kaniko-project/executor
    args: 
      - --context=dir://.
      - --dockerfile=build/Dockerfile
      - --destination=us-east1-docker.pkg.dev/${PROJECT_ID}/containers/mobile-content-${_ENV_NAME}:latest
      - --destination=us-east1-docker.pkg.dev/${PROJECT_ID}/containers/mobile-content-${_ENV_NAME}:${BUILD_ID}
      - --build-arg=sefariaProjectBranch=${_SEFARIA_PROJECT_BRANCH}
    id: mobilecontent_container
    wait_for: [ "-" ]

  - name: "gcr.io/cloud-builders/git"
    args: ['clone', 'https://source.developers.google.com/p/production-deployment/r/k8s-admin', '--branch', '${_K8S_ADMIN_BRANCH}', "--depth", "1"]
    id: k8s-admin_clone
    wait_for: [ "-" ]

  # We can later change the local_settings file based on the environment
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: copy_local_settings
    dir: k8s-admin/v2
    entrypoint: cp
    args: [ "-f", "app_settings/mobile_content/local_settings.py", "charts/mobile-content/" ]
    wait_for:
      - k8s-admin_clone

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: copy_sefaria_settings
    dir: k8s-admin/v2
    entrypoint: cp
    args: [ "-f", "app_settings/mobile_content/sefaria_local_settings.py", "charts/mobile-content/" ]
    wait_for:
      - k8s-admin_clone

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: debug_print
    dir: k8s-admin/v2
    entrypoint: cat
    args: [ "./app_settings/mobile_content/values.${_ENV_NAME}.yaml" ]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: deploy
    entrypoint: bash
    args:
      - -ceu
      - |
        # Install helm quickly
        apt-get update -y && apt-get install -y curl ca-certificates
        curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

        # (Optional) auth for Artifact Registry pulls, if your chart uses images from AR
        gcloud auth configure-docker us-east1-docker.pkg.dev -q

        # Fetch kube credentials into the shared kubeconfig
        gcloud container clusters get-credentials "${_GKE_CLUSTER_NAME}" \
          --zone "${_GKE_ZONE}" --project $PROJECT_ID

        # Sanity check
        kubectl get ns
        helm version

    #args: [, '-f', './app_settings/mobile_content/values.${_ENV_NAME}.yaml', '--debug' ]
        # Run your upgrade/install
        helm upgrade -i "mobiledownloader-${_ENV_NAME}" "./charts/mobile-content" \
          --namespace "${_GKE_NAMESPACE}" \
          --debug \
          --set-string=deployEnv=${_ENV_NAME},mobileDownload.subdomain=${_SUBDOMAIN},mobileDownload.image.serverImage=us-east1-docker.pkg.dev/${PROJECT_ID}/containers/mobile-content-${_ENV_NAME},mobileDownload.image.serverReleaseTag=${BUILD_ID},mobileDownload.secrets.passwordKey=${_SHARED_TOKEN} \
          -f "./app_settings/mobile_content/values.${_ENV_NAME}.yaml"
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER_NAME}'
      - 'KUBECTL_VERSION=1.14'
      - 'KUBECONFIG=/root/.kube/config'
      - 'USE_GKE_GCLOUD_AUTH_PLUGIN=True'
    wait_for:
      - k8s-admin_clone
      - copy_sefaria_settings
      - copy_local_settings
      - mobilecontent_container
options:
  logging: CLOUD_LOGGING_ONLY
...
